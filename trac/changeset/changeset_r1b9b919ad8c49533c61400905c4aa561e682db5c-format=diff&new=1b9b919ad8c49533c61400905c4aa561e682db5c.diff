Index: system/application/config/yorker.php
===================================================================
--- system/application/config/yorker.php (revision 91403c7751374d1fbb300bf532a0a3cb93fa330c)
+++ system/application/config/yorker.php (revision 1b9b919ad8c49533c61400905c4aa561e682db5c)
@@ -27,4 +27,6 @@
 $config['enable_analytics'] = false;
 
+$config['twitter_feed_userid'] = 'theyorkeruk';
+$config['twitter_feed_passwd'] = 'y0rk3rw1nbu4';
 $config['twitter_admin_userid'] = 'ykr';
 $config['twitter_admin_passwd'] = 'naG88fEn@laTh46ButT';
Index: system/application/controllers/office/article.php
===================================================================
--- system/application/controllers/office/article.php (revision 91403c7751374d1fbb300bf532a0a3cb93fa330c)
+++ system/application/controllers/office/article.php (revision 1b9b919ad8c49533c61400905c4aa561e682db5c)
@@ -139,5 +139,5 @@
 		if (empty($article['content_heading'])) $errors[] = 'Headline not specified.';
 		if (empty($article['content_subtext'])) $errors[] = 'Blurb not specified.';
-		if (empty($article['thumbnail_photo_id'])) $errors[] = 'Photo to use for article thumbnails not selected.';
+		if ($article['thumbnail_photo_id'] === null) $errors[] = 'Photo to use for article thumbnails not selected.';
 
 		$reporters = $this->article_model->getReportersForArticle($article_id);
@@ -275,4 +275,8 @@
 		if (!CheckPermissions('office')) return;
 		if (!CheckRolePermissions('ARTICLE_ADD')) return;
+
+		$article_id = $this->article_model->create($this->user_auth->entityId);
+
+		redirect('/office/article/' . $article_id);
 	}
 
Index: system/application/controllers/office/liveblog.php
===================================================================
--- system/application/controllers/office/liveblog.php (revision a8708976a8bbeef183eb930634ec32c135971c15)
+++ system/application/controllers/office/liveblog.php (revision 1b9b919ad8c49533c61400905c4aa561e682db5c)
@@ -72,54 +72,512 @@
 	}
 
+	function charts ()
+	{
+		if (!CheckPermissions('office')) return;
+		if ((GetUserLevel() != 'editor') && (GetUserLevel() != 'admin')) {
+			$this->main_frame->AddMessage('error', 'ACCESS DENIED');
+			redirect('/office/liveblog');
+		}
+
+		$sql = 'SELECT id, role, (SELECT COUNT(*) FROM elections_candidates WHERE elections_candidates.position_id = elections_positions.id) AS candidate_count FROM elections_positions ORDER BY ordering ASC';
+		$data = array();
+		$data['positions'] = $this->db->query($sql)->result();
+
+		$this->main_frame->SetContentSimple('office/liveblog/charts-elections-positions', $data);
+		$this->main_frame->Load();
+	}
+
+	function charts2 ($position = NULL)
+	{
+		if (!CheckPermissions('office')) return;
+		if ((GetUserLevel() != 'editor') && (GetUserLevel() != 'admin')) {
+			$this->main_frame->AddMessage('error', 'ACCESS DENIED');
+			redirect('/office/liveblog');
+		}
+		if (empty($position)) {
+			show_404();
+			return;
+		}
+
+		// Elections Live Blog Article
+		$article_id = 2858;
+
+		// Get Data
+		$data = array();
+		$boxes = array('a','d','g','h','j','l','v','w','nc','votes');
+		$colleges = array('a','d','g','h','j','l','v','w','nc');
+		$collnames = array('Alcuin','Derwent','Goodricke','Halifax','James','Langwith','Vanbrugh','Wentworth','No College');
+
+		$sql = 'SELECT id, role, count FROM elections_positions WHERE id = ?';
+		$data['position'] = $this->db->query($sql, array($position))->row();
+
+		$sql = 'SELECT id, name FROM elections_candidates WHERE position_id = ? ORDER BY ordering ASC';
+		$data['candidates'] = $this->db->query($sql, array($position))->result_array();
+
+		foreach ($data['candidates'] as &$candidate) {
+			$sql = 'SELECT * FROM elections_rounds WHERE candidate_id = ? ORDER BY round_id ASC';
+			$query = $this->db->query($sql, array($candidate['id']));
+			$candidate['rounds'] = array();
+			foreach ($query->result_array() as $round) {
+				$candidate['rounds'][$round['round_id']] = $round;
+			}
+		}
+
+		$data['chart1'] = array();
+		$data['chart2'] = array();
+		if (empty($_POST['chart1-height'])) $_POST['chart1-height'] = 130;
+		if (empty($_POST['chart2-height'])) $_POST['chart2-height'] = 200;
+
+		// Draw a chart for each round
+		for ($r = count($data['candidates'][0]['rounds']); $r > 0; $r--) {
+			$chart_people = array();
+			$chart_values = array();
+			$chart_maxvalue = 0;
+
+			foreach ($data['candidates'] as $c) {
+				$chart_people[] = $c['name'];
+				if (!empty($c['rounds'][$r]['votes'])) {
+					$chart_values[] = $c['rounds'][$r]['votes'];
+				} else {
+					$temp = 0;
+					foreach ($colleges as $college) {
+						$temp += $c['rounds'][$r][$college];
+					}
+					$chart_values[] = $temp;
+				}
+				if ($chart_values[count($chart_values) - 1] > $chart_maxvalue) {
+					$chart_maxvalue = $chart_values[count($chart_values) - 1];
+				}
+			}
+			$chart_title = $data['position']->role;
+			if (count($data['candidates'][0]['rounds']) > 1) {
+				$chart_title .= ' - Round ' . $r;
+			}
+			$data['chart1'][] = $this->_drawChart($chart_title, $data['position']->count, $chart_people, $chart_values, $chart_maxvalue);
+		}
+
+		//$this->_drawChart2($chart_title, $collnames, $chart_values2, $chart_maxvalue);
+
+		// Carry out operations as required
+		if (!empty($_POST['set-data'])) {
+			foreach ($data['candidates'] as $c) {
+				foreach ($c['rounds'] as $r) {
+					$params = array();
+					foreach ($boxes as $b) {
+						$input_name = 'c-' . $c['id'] . '-' . $r['round_id'] . '-' . $b;
+						$params[] = (!empty($_POST[$input_name])) ? $_POST[$input_name] : '0';
+					}
+					$params[] = $r['round_id'];
+					$params[] = $c['id'];
+					$sql = 'UPDATE elections_rounds SET a=?, d=?, g=?, h=?, j=?, l=?, v=?, w=?, nc=?, votes=? WHERE round_id = ? AND candidate_id = ?';
+					$query = $this->db->query($sql, $params);
+				}
+				$new_round = false;
+				$new_round_number = count($c['rounds']) + 1;
+				$params = array();
+				foreach ($boxes as $b) {
+					$input_name = 'c-' . $c['id'] . '-' . $new_round_number . '-' . $b;
+					if (isset($_POST[$input_name]) && $_POST[$input_name] != '') {
+						$params[] = $_POST[$input_name];
+						$new_round = true;
+					} else {
+						$params[] = '0';
+					}
+				}
+				$params[] = $new_round_number;
+				$params[] = $c['id'];
+				if ($new_round) {
+					$sql = 'INSERT INTO elections_rounds SET a=?, d=?, g=?, h=?, j=?, l=?, v=?, w=?, nc=?, votes=?, round_id=?, candidate_id=?';
+					$query = $this->db->query($sql, $params);
+				}
+			}
+			redirect('/office/liveblog/charts2/' . $position);
+		} elseif (!empty($_POST['insert-chart1'])) {
+			$this->load->model('roses_model');
+
+			$blog_entry = '-- CHART --';
+			$blog_entry_cache = '';
+			foreach ($data['chart1'] as $chart) {
+				$blog_entry_cache .= '<div style="text-align:center"><img src="' . $chart . '" alt="Election Results Chart" /></div>';
+			}
+
+			$this->roses_model->addBlogEntry($article_id, $blog_entry, $blog_entry_cache, $this->user_auth->entityId);
+			$this->_updateArticle($article_id, $this->user_auth->entityId);
+
+			$this->main_frame->AddMessage('success', 'Chart inserted successfully.');
+			redirect('/office/liveblog/charts2/' . $position);
+		}
+
+
+		$this->main_frame->SetContentSimple('office/liveblog/charts-elections-results', $data);
+		$this->main_frame->Load();
+	}
+
+	function _drawChart($title = '', $position_count = 1, $people = array(), $values = array(), $max = 100)
+	{
+		$o = 'http://chart.apis.google.com/chart?chs=360x' . $_POST['chart1-height'];
+		$o .= '&cht=bhs';
+		$o .= '&chxt=y,x';
+		$o .= '&chxs=0,000000,11,1,lt,000000|1,000000,11,0,t,000000';
+		$o .= '&chxtc=1,0';
+		$o .= '&chts=000000,14';
+		$o .= '&chxp=1,50';
+		$o .= '&chco=20c1f0';
+		$o .= '&chm=N+*,000000,0,-1,11,1';
+
+		$title = str_replace(' ', '+', $title);
+		$quota = round(array_sum($values) / ($position_count + 1), 1);
+		$candidates = implode('|', array_reverse($people));
+
+		$o .= '&chtt=' . $title;
+		$o .= '&chxl=0:|' . $candidates . '|1:|Vote+Quota+=+' . $quota . '|';
+		$o .= '&chd=t:' . implode(',', $values);
+
+		if ($quota > $max) $max = $quota;
+		$max += 50;
+		//$o .= '&chds=0,' . array_sum($values);
+		$o .= '&chds=0,' . $max;
+		$quota_line = round(100 * ($quota / $max), 1);
+		$o .= '&chg=200,200,4,4,' . $quota_line . ',-1';
+
+
+		$tmp = '';
+		$bar_height = round(1 / count($values), 3);
+		$new_values = array_reverse($values);
+		$win_quota = $quota;
+		$ordered_values = sort($values);
+		if (!empty($ordered_values[$position_count - 1]) && $ordered_values[$position_count - 1] > $win_quota) {
+			$win_quota = $ordered_values[$position_count - 1];
+		}
+		foreach ($new_values as $v) {
+			$tmp .= ',' . ($v >= $win_quota ? 'dddddd' : 'ffffff') . ',' . $bar_height;
+		}
+		$o .= '&chf=c,ls,90' . $tmp;
+
+		return $o;
+	}
+
+	// $values[$candidate][$college]
+	function _drawChart2($title = '', $people = array(), $values = array(), $max = 100)
+	{
+		$o = 'http://chart.apis.google.com/chart?chs=360x' . $_POST['chart2-height'];
+		$o .= '&cht=bhs';
+		$o .= '&chxt=y,x';
+		$o .= '&chxs=0,000000,11,1,lt,000000|1,000000,11,0,t,000000';
+		$o .= '&chxtc=1,0';
+		$o .= '&chts=000000,14';
+		$o .= '&chxp=1,50';
+		$o .= '&chco=ff6a00|20c1f0|999999|000000|cccccc';
+
+		$labels = array();
+		$p_count = 0;
+		foreach ($people as $p) {
+			$labels[] = 'N+*,000000,' . $p_count . ',-1,11,1';
+			$p_count++;
+		}
+		$o .= '&chm=' . implode('|', $labels);
+
+		$title = str_replace(' ', '+', $title);
+		$candidates = implode('|', array_reverse($people));
+
+		$o .= '&chtt=' . $title;
+		$o .= '&chxl=0:|' . $candidates . '|1:|Votes per candidate|';
+		foreach ($values as &$v) {
+			$v = implode(',', $v);
+		}
+		$o .= '&chd=t:' . implode('|', $values);
+
+		$o .= '&chds=0,' . $max;
+
+		return $o;
+	}
+
+	function admin ($article_id = 1682, $entry_id = NULL)
+	{
+		if (!CheckPermissions('office')) return;
+		if ((GetUserLevel() == 'editor') || (GetUserLevel() == 'admin')) {
+			$this->load->model('roses_model');
+			$this->load->model('photos_model');
+			$this->load->library('image');
+			$this->load->library('wikiparser');
+			// Set winning team indicators
+			$this->wikiparser->add_image_override(-1, '<img src="/images/version2/rose_lancashire.png" alt="Lancaster" />', 'Lancaster Win');
+			$this->wikiparser->add_image_override(-2, '<img src="/images/version2/news/rose_yorkshire.png" alt="York Win" />', 'York Win');
+			$this->wikiparser->add_image_override(-3, '<img src="/images/version2/news/rose_draw.png" alt="Draw" />', 'Draw');
+			$photo_requests = $this->photos_model->GetPhotoRequestsForArticle($article_id);
+			foreach ($photo_requests as $photo) {
+				$this->wikiparser->add_image_override($photo['photo_number'], $this->image->getThumb($photo['photo_id'], $photo['photo_codename'], true), $photo['photo_caption']);
+			}
+			$data = array();
+
+			if ($this->roses_model->isLiveBlog($article_id)) {
+				if ((is_numeric($entry_id)) && (!empty($_POST['edit' . $entry_id]))) {
+					$blog_entry = $_POST['entry' . $entry_id];
+					$blog_entry_cache = $this->wikiparser->parse($blog_entry);
+					$this->roses_model->updateBlogEntry($entry_id, $blog_entry, $blog_entry_cache, $this->user_auth->entityId);
+					$this->_updateArticle($article_id, $this->user_auth->entityId);
+					$this->main_frame->AddMessage('success', 'Blog entry was successfully edited.');
+					redirect('/office/liveblog/admin/' . $article_id);
+				}
+				if ((is_numeric($entry_id)) && (!empty($_POST['delete' . $entry_id]))) {
+					$this->roses_model->deleteBlogEntry($entry_id);
+					$this->_updateArticle($article_id, $this->user_auth->entityId);
+					$this->main_frame->AddMessage('success', 'Blog entry was successfully deleted!');
+					redirect('/office/liveblog/admin/' . $article_id);
+				}
+				if ((is_numeric($article_id)) && (!empty($_POST['postnew']))) {
+					$blog_entry = "'''" . date('H:i') . "''' " . $_POST['postcontent'];
+					$twitter_update = $_POST['postcontent'];
+					$blog_entry_cache = $this->wikiparser->parse($blog_entry);
+					$this->roses_model->addBlogEntry($article_id, $blog_entry, $blog_entry_cache, $this->user_auth->entityId);
+					$this->_updateArticle($article_id, $this->user_auth->entityId);
+					if (!empty($_POST['posttwitter'])) {
+						// Post to public Twitter feed
+						$TwitterFeed = new TwitterXML($this->config->item('twitter_feed_userid'), $this->config->item('twitter_feed_passwd'));
+						$TwitterFeed->updateStatus($twitter_update);
+					}
+					$this->main_frame->AddMessage('success', 'New Blog entry added.');
+					redirect('/office/liveblog/admin/' . $article_id);
+				}
+
+				$data['article_id'] = $article_id;
+				$data['content'] = $this->roses_model->getLiveBlog($article_id);
+
+				// Set up the content
+				$this->main_frame->SetContentSimple('office/liveblog/admin', $data);
+				$this->main_frame->Load();
+			} else {
+				$this->main_frame->AddMessage('error', 'Requested article ID is not setup for Live Blogging.');
+				redirect('/office/liveblog');
+			}
+		} else {
+			$this->main_frame->AddMessage('error', 'ACCESS DENIED');
+			redirect('/office/liveblog');
+		}
+	}
+
 	function update ()
 	{
+		$this->load->library('wikiparser');
+		$this->load->model('roses_model');
+
 		$TwitterCP = new TwitterXML($this->config->item('twitter_admin_userid'), $this->config->item('twitter_admin_passwd'));
 		$msgs = $TwitterCP->getDirectMessages();
-		$msgs = $msgs->direct_message;
-		$msg_count = count($msgs);
-		// @TODO: Cope with more than 20 new messages
-		// Process msgs from oldest to newest
-		for ($i = $msg_count - 1; $i >= 0; $i--) {
-			// @TODO: Also check they have live blogging permission
-			$user = $this->twitter_model->checkTwitterAccess($msgs[$i]->sender_id);
-			if (!$user) {
-				$send_msg = $TwitterCP->sendDirectMessage($msgs[$i]->sender_id, 'Unauthorised User!');
-print_r($send_msg);
-			} else {
-				echo('msgid: ' . $msgs[$i]->id . '<br />');
-				echo('date: ' . $msgs[$i]->created_at . '<br />');
-				echo('txt: ' . $msgs[$i]->text . '<br />');
-				echo('sender: ' . $msgs[$i]->sender_id . '<hr />');
-				$msg_date = strtotime($msgs[$i]->created_at);
-				$cmds = explode(' ', $msgs[$i]->text);
-				switch ($cmds[0]) {
-					default:
-						if (is_numeric($cmds[0])) {
-							// Process live blog update
-							$article_id = $cmds[0];
-							unset($cmds[0]);
-							$text = '\'\'\'' . date('D @ H:i', $msg_date) . '\'\'\' ' . implode(' ', $cmds) . "\n\n";
-							// Find article to edit
-							$this->load->model('article_model');
-							$this->load->model('requests_model');
-							$this->load->library('wikiparser');
-							$wiki_cache = $this->wikiparser->parse($text);
-							$revision = $this->article_model->GetLatestRevision($article_id);
-							$rev_data = $this->article_model->GetRevisionData($revision);
-							$revision = $this->article_model->CreateNewRevision($article_id, $user->user_entity_id, $rev_data['headline'], $rev_data['subheadline'], $rev_data['subtext'], $rev_data['blurb'], $text . $rev_data['text'], $wiki_cache . $rev_data['cache']);
-							$publish_date = date('Y-m-d H:i:s', mktime());
-							$this->requests_model->PublishArticle($article_id,$revision,$publish_date);
-							$send_msg = $TwitterCP->sendDirectMessage($msgs[$i]->sender_id, 'Successfully updated article: \'' . $rev_data['headline'] . '\'');
-print_r($send_msg);
-						} else {
-							$send_msg = $TwitterCP->sendDirectMessage($msgs[$i]->sender_id, 'Unknown Command!');
-print_r($send_msg);
-						}
-				}
-			}
-			// Delete message after processing
-			$TwitterCP->deleteDirectMessage($msgs[$i]->id);
-		}
-	}
+		if ($msgs === FALSE) {
+			$error = 'Unable to retrieve direct messages: ' . $TwitterCP->getError();
+		} else {
+			$msgs = $msgs->direct_message;
+			$msg_count = count($msgs);
+			// @TODO: Cope with more than 20 new messages
+			// Process msgs from oldest to newest
+			for ($i = $msg_count - 1; $i >= 0; $i--) {
+				// @TODO: Also check they have live blogging permission
+				$user = $this->twitter_model->checkTwitterAccess($msgs[$i]->sender_id);
+				if (!$user) {
+					$TwitterCP->sendDirectMessage($msgs[$i]->sender_id, 'ERROR: Unauthorised User!');
+					$error = 'Unauthorised User! ' . $msgs[$i]->sender_id;
+				} else {
+					echo('msgid: ' . $msgs[$i]->id . '<br />');
+					echo('date: ' . $msgs[$i]->created_at . '<br />');
+					echo('txt: ' . $msgs[$i]->text . '<br />');
+					echo('sender: ' . $msgs[$i]->sender_id . '<hr />');
+					$msg_date = strtotime($msgs[$i]->created_at);
+					$cmds = explode(' ', $msgs[$i]->text);
+					switch ($cmds[0]) {
+						case 'score':
+							// Format: d ykr score <event_id> <lancaster_score> <york_score>
+							// <*_score> is numerical if score known or w/d/l if not
+							$valid = array(
+								'w' => -1,
+								'd' => -2,
+								'l' => -3
+							);
+							// Roses 2008 article id's
+							$article_id = $this->_whichArticle();
+							if ((count($cmds) == 4) && (is_numeric($cmds[1])) && ((is_numeric($cmds[2])) || (isset($valid[$cmds[2]]))) && ((is_numeric($cmds[3])) || (isset($valid[$cmds[3]])))) {
+								$event = $this->roses_model->getResult($cmds[1]);
+								if ($event !== NULL) {
+									// Store result in database
+									$score_lancs = (isset($valid[$cmds[2]])) ? $valid[$cmds[2]] : $cmds[2];
+									$score_york = (isset($valid[$cmds[3]])) ? $valid[$cmds[3]] : $cmds[3];
+									$this->roses_model->setResult($event->event_id, $score_lancs, $score_york, date('Y-m-d H:i:s'));
+									// Set winning team indicators
+									$this->wikiparser->add_image_override(-1, '<img src="/images/prototype/news/rose_lancashire.png" alt="Lancaster" />', 'Lancaster Win');
+									$this->wikiparser->add_image_override(-2, '<img src="/images/prototype/news/rose_yorkshire.png" alt="York Win" />', 'York Win');
+									$this->wikiparser->add_image_override(-3, '<img src="/images/prototype/news/rose_draw.png" alt="Draw" />', 'Draw');
+									// Add posted time to blog entry
+									if ($event->event_score_time === NULL) {
+										$blog_entry = "'''" . date('H:i') . "''' ";
+									} else {
+										$blog_entry = "'''" . date('H:i', $event->event_score_time) . "''' ";
+									}
+									$twitter_update = '';
+									// Add winning team indicator
+									if ($score_lancs > $score_york) {
+										$blog_entry .= "[[image:-1|inline|Lancaster Win]] '''Lancaster Win!'''";
+										$twitter_update .= 'Lancaster Win!';
+									} elseif ($score_lancs < $score_york) {
+										$blog_entry .= "[[image:-2|inline|York Win]] '''York Win!'''";
+										$twitter_update .= 'York Win!';
+									} elseif ($score_lancs == $score_york) {
+										$blog_entry .= "[[image:-3|inline|Draw]] '''Draw!'''";
+										$twitter_update .= 'Draw!';
+									}
+									// Add sport and match name
+									$blog_entry .= ' ' . $event->event_sport . ' ' . $event->event_name;
+									$twitter_update .= ' ' . $event->event_sport . ' ' . $event->event_name;
+									// Add score if available
+									if (($score_lancs >= 0) || ($score_york >= 0)) {
+										$blog_entry .= " '''" . $score_lancs . '-' . $score_york . "'''";
+										$twitter_update .= ' ' . $score_lancs . '-' . $score_york;
+									}
+									$blog_entry_cache = $this->wikiparser->parse($blog_entry);
+									// Either add new blog entry or update existing
+									if ($event->event_blog_entry_id === NULL) {
+										$new_entry = $this->roses_model->addBlogEntry($article_id, $blog_entry, $blog_entry_cache, $user->user_entity_id);
+										$this->roses_model->noteScoreBlogEntry($event->event_id, $new_entry);
+									} else {
+										$this->roses_model->updateBlogEntry($event->event_blog_entry_id, $blog_entry, $blog_entry_cache, $user->user_entity_id);
+									}
+									// Update live blog article
+									$update = $this->_updateArticle($article_id, $user->user_entity_id);
+									if ($update !== TRUE) {
+										$error = $update;
+									}
+									$this->_updateResults ($user->user_entity_id);
+								} else {
+									$TwitterCP->sendDirectMessage($msgs[$i]->sender_id, 'ERROR: Unknown event ID!');
+								}
+							} else {
+								$TwitterCP->sendDirectMessage($msgs[$i]->sender_id, 'ERROR: Incorrect message format: d ' . $this->config->item('twitter_admin_userid') . ' score <event_id> <lancs_score> <york_score>');
+							}
+							break;
+						default:
+							if (is_numeric($cmds[0])) {
+								// Process live blog update
+								$article_id = $cmds[0];
+								unset($cmds[0]);
+								if ($this->roses_model->isLiveBlog($article_id)) {
+									$blog_entry = "'''" . date('H:i') . "''' " . implode(' ', $cmds);
+									$twitter_update = implode(' ', $cmds);
+									$blog_entry_cache = $this->wikiparser->parse($blog_entry);
+									$this->roses_model->addBlogEntry($article_id, $blog_entry, $blog_entry_cache, $user->user_entity_id);
+									// Update live blog article
+									$update = $this->_updateArticle($article_id, $user->user_entity_id);
+									if ($update !== TRUE) {
+										$error = $update;
+									}
+									//$send_msg = $TwitterCP->sendDirectMessage($msgs[$i]->sender_id, 'Successfully updated article: \'' . $rev_data['headline'] . '\'');
+								} else {
+									$error = 'ERROR: Article ' . $article_id . ' isn\'t a live blog!';
+								}
+							} else {
+								$TwitterCP->sendDirectMessage($msgs[$i]->sender_id, 'ERROR: Unknown Command!');
+							}
+					}
+				}
+				// Delete message after processing
+				if ($TwitterCP->deleteDirectMessage($msgs[$i]->id) === FALSE) {
+					$error = 'Unable to delete message: ' . $TwitterCP->getError();
+				}
+			}
+		}
+		if (isset($error)) {
+			$this->load->helper('yorkermail_helper');
+		//	yorkermail($this->config->item('webmaster_email_address'), '[TheYorker] - Twitter API Error Message', $error, $this->config->item('no_reply_email_address'));
+		}
+		if (isset($twitter_update)) {
+			// Post to public Twitter feed
+			$TwitterFeed = new TwitterXML($this->config->item('twitter_feed_userid'), $this->config->item('twitter_feed_passwd'));
+			$TwitterFeed->updateStatus($twitter_update);
+		}
+	}
+
+	function _whichArticle ()
+	{
+		$article_id = 1682;											// Test article id
+		if (mktime() >= mktime(8,0,0,5,2,2008)) $article_id = 1690;	// Friday
+		if (mktime() >= mktime(8,0,0,5,3,2008)) $article_id = 1691;	// Saturday
+		if (mktime() >= mktime(8,0,0,5,4,2008)) $article_id = 1692;	// Sunday
+		return $article_id;
+	}
+
+	function _updateArticle ($article_id, $user_id)
+	{
+		$this->load->model('roses_model');
+		if ($this->roses_model->isLiveBlog($article_id)) {
+			// Get all live blog content
+			$content = $this->roses_model->getLiveBlog($article_id);
+			// Find article to edit
+			$this->load->model('article_model');
+			$this->load->model('requests_model');
+			$revision = $this->article_model->GetLatestRevision($article_id);
+			$rev_data = $this->article_model->GetRevisionData($revision);
+			//$revision = $this->article_model->CreateNewRevision($article_id, $user_id, $rev_data['headline'], $rev_data['subheadline'], $rev_data['subtext'], $rev_data['blurb'], $content['all']['wikitext'], $content['all']['cache']);
+			$content['all']['wikitext'] = '!!! DO NOT EDIT THIS ARTICLE, THIS IS A LIVE BLOG, SPEAK TO webmaster@theyorker.co.uk INSTEAD !!!';
+			$revision = $this->article_model->CreateNewRevision($article_id, $user_id, $rev_data['headline'], $rev_data['subheadline'], $rev_data['subtext'], $rev_data['blurb'], $content['all']['wikitext'], $content['all']['cache']);
+			$publish_date = $this->roses_model->getPublishDate($article_id);
+			$this->requests_model->PublishArticle($article_id,$revision,$publish_date);
+		} else {
+			return 'ERROR: Article ' . $article_id . ' isn\'t a live blog!';
+		}
+		return TRUE;
+	}
+
+	function _updateResults ($user_id)
+	{
+		$total_york = 0;
+		$total_lancs = 0;
+		$article_id = 1693;
+		$this->load->model('roses_model');
+		$this->load->library('wikiparser');
+		// Set winning team indicators
+		$this->wikiparser->add_image_override(-1, '<img src="/images/prototype/news/rose_lancashire.png" alt="Lancaster" />', 'Lancaster Win');
+		$this->wikiparser->add_image_override(-2, '<img src="/images/prototype/news/rose_yorkshire.png" alt="York Win" />', 'York Win');
+		$this->wikiparser->add_image_override(-3, '<img src="/images/prototype/news/rose_draw.png" alt="Draw" />', 'Draw');
+		$result = $this->roses_model->getAllResults();
+		$content = '';
+		foreach ($result as $r) {
+			$content .= date('D H:i', $r['event_time']) . ' ' . $r['event_sport'] . ' ' . $r['event_name'] . ' @ ' . $r['event_venue'];
+			if ($r['event_score_time'] !== NULL) {
+				$points_lancs = 0;
+				$points_york = 0;
+				if ($r['event_lancaster_score'] > $r['event_york_score']) {
+					$content .= "{{br}}[[image:-1|inline|Lancaster Win]] '''Lancaster Win!''' ";
+					if ($r['event_points'] > 0) $points_lancs = $r['event_points'];
+
+				} elseif ($r['event_lancaster_score'] < $r['event_york_score']) {
+					$content .= "{{br}}[[image:-2|inline|York Win]] '''York Win!''' ";
+					if ($r['event_points'] > 0) $points_york = $r['event_points'];
+				} elseif ($r['event_lancaster_score'] == $r['event_york_score']) {
+					$content .= "{{br}}[[image:-3|inline|Draw]] '''Draw!''' ";
+					if ($r['event_points'] > 0) {
+						$points_lancs = $r['event_points'] / 2;
+						$points_york = $r['event_points'] / 2;
+					}
+				}
+				if (($r['event_lancaster_score'] >= 0) || ($r['event_york_score'] >= 0)) {
+					$content .= 'Score: ' . $r['event_lancaster_score'] . '-' . $r['event_york_score'] . ' ';
+				}
+				if ($r['event_points'] > 0) {
+					$content .= 'Points: ' . $points_lancs . '-' . $points_york;
+					$total_york = $total_york + $points_york;
+					$total_lancs = $total_lancs + $points_lancs;
+				}
+			}
+			$content .= "\n\n";
+		}
+		$intro = 'Lancaster ' . $total_lancs . ' - ' . $total_york . ' York';
+		$cache = $this->wikiparser->parse($content);
+		// Find article to edit
+		$this->load->model('article_model');
+		$this->load->model('requests_model');
+		$revision = $this->article_model->GetLatestRevision($article_id);
+		$rev_data = $this->article_model->GetRevisionData($revision);
+		$revision = $this->article_model->CreateNewRevision($article_id, $user_id, $rev_data['headline'], $rev_data['subheadline'], $intro, $rev_data['blurb'], $content, $cache);
+		$publish_date = $this->roses_model->getPublishDate($article_id);
+		$this->requests_model->PublishArticle($article_id,$revision,$publish_date);
+	}
+
 }
 ?>
Index: system/application/controllers/roses.php
===================================================================
--- system/application/controllers/roses.php (revision bab715cff4290252863e22b5da69488dcbc2d973)
+++ system/application/controllers/roses.php (revision 1b9b919ad8c49533c61400905c4aa561e682db5c)
@@ -21,6 +21,10 @@
 		if (!CheckPermissions('public')) return;
 
-		// Obtain banner for homepage
-		$data['banner'] = $this->home_model->GetBannerImageForHomepage('sport');
+		$data = array();
+		$data['liveblog'] = $this->home_hack_model->getArticlesByTags(array('Roses 2009', 'liveblog'), 1);
+		$data['others'] = $this->home_hack_model->getArticlesByTags(array('Roses 2009'), 15);
+
+		$sql = 'SELECT * FROM roses_scores ORDER BY event_time ASC';
+		$data['events'] = $this->db->query($sql)->result_array();
 
 		$this->pages_model->SetPageCode('homepage_roses');
Index: system/application/libraries/Twitter.php
===================================================================
--- system/application/libraries/Twitter.php (revision a8708976a8bbeef183eb930634ec32c135971c15)
+++ system/application/libraries/Twitter.php (revision 1b9b919ad8c49533c61400905c4aa561e682db5c)
@@ -11,4 +11,11 @@
 		$this->username = $username;
 		$this->password = $password;
+	}
+
+	// Status Updates
+	function updateStatus ($status) {
+		$status = urlencode(stripslashes(urldecode($status)));
+		$api_path = 'http://twitter.com/statuses/update.xml?status=' . $status;
+		return $this->_APICall($api_path, TRUE, array(), TRUE);
 	}
 
Index: system/application/models/article_model.php
===================================================================
--- system/application/models/article_model.php (revision 91403c7751374d1fbb300bf532a0a3cb93fa330c)
+++ system/application/models/article_model.php (revision 1b9b919ad8c49533c61400905c4aa561e682db5c)
@@ -19,4 +19,16 @@
 	 *	ARTICLE MANAGER (v2.0)
 	 */
+
+	function create ($user_id)
+	{
+		$sql = 'INSERT INTO	articles
+			SET		article_request_entity_id = ?';
+		$query = $this->db->query($sql, array($user_id));
+		$article_id = $this->db->insert_id();
+
+		$this->newRevision($article_id, $user_id, '', '', '', '', '');
+
+		return $article_id;
+	}
 
 	function getById ($article_id = NULL)
Index: system/application/models/home_hack_model.php
===================================================================
--- system/application/models/home_hack_model.php (revision c54c7898e9cf5bc761b9d6fe2012fec02bb64296)
+++ system/application/models/home_hack_model.php (revision 1b9b919ad8c49533c61400905c4aa561e682db5c)
@@ -15,4 +15,40 @@
 	}
 
+	function getArticlesByTags ($tags, $number = 4, $ignore_articles = array())
+	{
+		$params = $tags;
+		$inputs = array_fill(0, count($tags), '?');
+		$params[] = count($tags);
+		$params[] = $number;
+		$sql = 'SELECT		a.article_id AS id,
+							UNIX_TIMESTAMP(a.article_publish_date) AS date,
+							ac.article_content_heading AS headline,
+							ac.article_content_blurb AS blurb,
+							pr.photo_request_chosen_photo_id AS photo_id,
+							pr.photo_request_title AS photo_title,
+							COUNT(tags.tag_id) AS tag_count
+				FROM		articles AS a,
+							article_contents AS ac,
+							article_tags,
+							tags,
+							photo_requests AS pr
+				WHERE		a.article_id = article_tags.article_tag_article_id
+				AND			article_tags.article_tag_tag_id = tags.tag_id
+				AND			tags.tag_name IN (' . implode(',', $inputs) . ')
+				AND			UNIX_TIMESTAMP(a.article_publish_date) < UNIX_TIMESTAMP()
+				AND			a.article_pulled = 0
+				AND			a.article_deleted = 0
+				AND			a.article_live_content_id IS NOT NULL
+				AND			ac.article_content_id = a.article_live_content_id
+				AND			pr.photo_request_article_id = a.article_id
+				AND			a.article_thumbnail_photo_id = pr.photo_request_relative_photo_number
+				GROUP BY	a.article_id
+				HAVING		tag_count = ?
+				ORDER BY	a.article_publish_date DESC
+				LIMIT		0, ?';
+		$query = $this->db->query($sql, $params);
+		return $query->result_array();
+	}
+
 	function getLatestArticleIds($types) {
 		$params = array();
@@ -25,5 +61,5 @@
 				content_types
 			LEFT JOIN 
-				content_types AS child 
+				content_types AS child
 			ON
 				child.content_type_parent_content_type_id = content_types.content_type_id 
Index: system/application/models/roses_model.php
===================================================================
--- system/application/models/roses_model.php (revision 1b9b919ad8c49533c61400905c4aa561e682db5c)
+++ system/application/models/roses_model.php (revision 1b9b919ad8c49533c61400905c4aa561e682db5c)
@@ -0,0 +1,146 @@
+<?php
+
+/**
+ *	@brief		Temporary functionality for Roses 2008
+ *	@author		Chris Travis (cdt502 - ctravis@gmail.com)
+ *	@date		30th April 2008
+ *	@todo		Disable / Delete as appropriate after Roses weekend
+ */
+
+class Roses_model extends Model
+{
+	function Roses_model ()
+	{
+		parent::Model();
+	}
+
+	function getAllResults()
+	{
+		$sql = 'SELECT		UNIX_TIMESTAMP(event_time) AS event_time,
+					event_sport,
+					event_name,
+					event_venue,
+					event_points,
+					event_lancaster_score,
+					event_york_score,
+					event_score_time
+			FROM		roses_scores
+			ORDER BY	event_time ASC,
+					event_sport ASC';
+		$query = $this->db->query($sql);
+		return $query->result_array();
+	}
+
+	function getResult ($event_id)
+	{
+		$sql = 'SELECT	event_id,
+						UNIX_TIMESTAMP(event_time) AS event_time,
+						event_sport,
+						event_name,
+						event_venue,
+						event_points,
+						event_score_time,
+						event_blog_entry_id
+				FROM	roses_scores
+				WHERE	event_id = ?';
+		$query = $this->db->query($sql, array($event_id));
+		if ($query->num_rows() == 1)
+			return $query->row();
+		return NULL;
+	}
+
+	function setResult ($event_id, $score_lancs, $score_york, $score_time)
+	{
+		$sql = 'UPDATE	roses_scores
+				SET		event_lancaster_score = ?,
+						event_york_score = ?,
+						event_score_time = ?
+				WHERE	event_id = ?';
+		$query = $this->db->query($sql, array($score_lancs, $score_york, $score_time, $event_id));
+	}
+
+	function addBlogEntry ($article_id, $wikitext, $cache, $user_id)
+	{
+		$sql = 'INSERT INTO	article_liveblog
+				SET			article_liveblog_article_id = ?,
+							article_liveblog_wikitext = ?,
+							article_liveblog_wikitext_cache = ?,
+							article_liveblog_user_entity_id = ?';
+		$query = $this->db->query($sql, array($article_id, $wikitext, $cache, $user_id));
+		return $this->db->insert_id();
+	}
+
+	function noteScoreBlogEntry($event_id, $entry_id)
+	{
+		$sql = 'UPDATE		roses_scores
+				SET			event_blog_entry_id = ?
+				WHERE		event_id = ?';
+		$this->db->query($sql, array($entry_id, $event_id));
+	}
+
+	function updateBlogEntry ($blog_id, $wikitext, $cache, $user_id)
+	{
+		$sql = 'UPDATE		article_liveblog
+				SET			article_liveblog_wikitext = ?,
+							article_liveblog_wikitext_cache = ?,
+							article_liveblog_user_entity_id = ?
+				WHERE		article_liveblog_id = ?';
+		$query = $this->db->query($sql, array($wikitext, $cache, $user_id, $blog_id));
+	}
+
+	function deleteBlogEntry ($entry_id)
+	{
+		$sql = 'UPDATE		article_liveblog
+				SET			article_liveblog_deleted = 1
+				WHERE		article_liveblog_id = ?';
+		$this->db->query($sql, array($entry_id));
+	}
+
+	function isLiveBlog ($article_id)
+	{
+		$sql = 'SELECT		article_id
+				FROM		articles
+				WHERE		article_id = ?
+				AND			article_liveblog = 1';
+		return $this->db->query($sql, array($article_id))->num_rows();
+	}
+
+	function getLiveBlog ($article_id)
+	{
+		$sql = 'SELECT		article_liveblog.article_liveblog_id,
+							article_liveblog.article_liveblog_wikitext,
+							article_liveblog.article_liveblog_wikitext_cache,
+							article_liveblog.article_liveblog_user_entity_id,
+							UNIX_TIMESTAMP(article_liveblog.article_liveblog_posted_time) AS article_liveblog_posted_time,
+							users.user_firstname,
+							users.user_surname
+				FROM		article_liveblog,
+							users
+				WHERE		article_liveblog.article_liveblog_article_id = ?
+				AND			article_liveblog.article_liveblog_deleted = 0
+				AND			article_liveblog.article_liveblog_user_entity_id = users.user_entity_id
+				ORDER BY	article_liveblog.article_liveblog_posted_time DESC';
+		$query = $this->db->query($sql, array($article_id));
+		$result = array();
+		$result['rows'] = array();
+		$result['all'] = array();
+		$result['all']['wikitext'] = '';
+		$result['all']['cache'] = '';
+		foreach($query->result() as $row) {
+			$result['rows'][] = $row;
+			$result['all']['wikitext'] .= $row->article_liveblog_wikitext . "\n\n";
+			$result['all']['cache'] .= $row->article_liveblog_wikitext_cache;
+		}
+		return $result;
+	}
+
+	function getPublishDate ($article_id)
+	{
+		$sql = 'SELECT		articles.article_publish_date
+				FROM		articles
+				WHERE		articles.article_id = ?';
+		return $this->db->query($sql, array($article_id))->row()->article_publish_date;
+	}
+
+}
+?>
Index: system/application/views/homepages/roses.php
===================================================================
--- system/application/views/homepages/roses.php (revision 85213558b1ffb0e08df588f5f8770e52c99aaceb)
+++ system/application/views/homepages/roses.php (revision 1b9b919ad8c49533c61400905c4aa561e682db5c)
@@ -1,7 +1,7 @@
 <div class="FlexiBox Box23">
 	<div id="DisplayBox">
-		<div id="DisplayBoxBg"><?php echo(xml_escape($main_articles[0]['heading'])); ?></div>
-		<div id="DisplayBoxText"><a href="/news/<?php echo(xml_escape($main_articles[0]['article_type'] . '/' . $main_articles[0]['id'])); ?>"><?php echo(xml_escape($main_articles[0]['heading'])); ?></a></div>
-		<a href="/news/<?php echo(xml_escape($main_articles[0]['article_type'] . '/' . $main_articles[0]['id'])); ?>"><img src="/photos/home/<?php echo(xml_escape($main_articles[0]['photo_id'])); ?>" alt="" /></a>
+		<div id="DisplayBoxBg"><?php echo(xml_escape($liveblog[0]['headline'])); ?></div>
+		<div id="DisplayBoxText"><a href="/news/<?php echo($liveblog[0]['id']); ?>"><?php echo(xml_escape($liveblog[0]['headline'])); ?></a></div>
+		<a href="/news/<?php echo($liveblog[0]['id']); ?>"><img src="/photos/home/<?php echo($liveblog[0]['photo_id']); ?>" alt="<?php echo(xml_escape($liveblog[0]['photo_title'])); ?>" /></a>
 	</div>
 </div>
@@ -11,26 +11,68 @@
 	<div class="ArticleListBox FlexiBox Box13<?php if ($last) echo(' FlexiBoxLast'); ?>">
 		<div class="ArticleListTitle">
-			<a href="/news/<?php echo($articles[0]['article_type'] . '/' . $articles[0]['id']); ?>">latest <?php echo($section); ?></a>
+			<a href="/roses"><?php echo($section); ?></a>
 		</div>
 		<?php foreach ($articles as $article) { ?>
 		<div>
-			<a href="/news/<?php echo(xml_escape($article['article_type'] . '/' . $article['id'])); ?>">
+			<a href="/news/<?php echo(xml_escape($article['id'])); ?>">
 				<img src="/photos/small/<?php echo(xml_escape($article['photo_id'])); ?>" alt="<?php echo(xml_escape($article['photo_title'])); ?>" title="<?php echo(xml_escape($article['photo_title'])); ?>" />
-				<?php echo(xml_escape($article['heading'])); ?>
+				<?php echo(xml_escape($article['headline'])); ?>
 			</a>
-			<div class="Date"><?php echo(xml_escape($article['date'])); ?></div>
+			<div class="Date"><?php echo(xml_escape(date('l, jS F Y', $article['date']))); ?></div>
 			<div class="clear"></div>
 		</div>
 		<?php } ?>
 	</div>
-	<?php if ($last) { ?><div class="clear"></div><?php } ?>
+	<?php /*if ($last) { ?><div class="clear"></div><?php }*/ ?>
 <?php } ?>
 
 <?php
-$column = 2;
-foreach ($section_articles as $section => $articles) {
-	$column++;
-	ArticleList($section, $articles, ($column % 3) == 0 ? true : false);
-}
+ArticleList('Roses 2009 Articles', $others, true);
 ?>
-<div class="clear"></div>
+
+<div class="FlexiBox Box23">
+	<div class="ArticleListTitle">
+		Fixtures &amp; Results
+	</div>
+	<table style="width:100%">
+		<tr>
+			<th>Start</th>
+			<th>Sport</th>
+			<th>Event</th>
+			<th>Venue</th>
+			<th>Points</th>
+			<th>Score</th>
+			<th>Winner</th>
+		</tr>
+		<?php foreach ($events as $event) { ?>
+		<tr>
+			<td><?php echo(xml_escape(date('D H:i', strtotime($event['event_time'])))); ?></td>
+			<td><?php echo(xml_escape($event['event_sport'])); ?></td>
+			<td><?php echo(xml_escape($event['event_name'])); ?></td>
+			<td><?php echo(xml_escape($event['event_venue'])); ?></td>
+			<td><?php echo(xml_escape($event['event_points'])); ?></td>
+			<?php if ($event['event_score_time'] !== NULL) { ?>
+				<td>
+					<?php
+					if ($event['event_york_score'] > 0 && $event['event_lancaster_score'] > 0) {
+						echo(xml_escape($event['event_york_score'] . ' - ' . $event['event_lancaster_score']));
+					} ?>
+				</td>
+				<td>
+					<?php if ($event['event_york_score'] > $event['event_lancaster_score']) { ?>
+						<img src="/images/version2/rose_yorkshire.png" alt="York Wins!" title="York Wins!" />
+					<?php } elseif ($event['event_york_score'] < $event['event_lancaster_score']) { ?>
+						<img src="/images/version2/rose_lancashire.png" alt="Lancaster Wins!" title="Lancaster Wins!" />
+					<?php } else { ?>
+						<img src="/images/version2/rose_draw.png" alt="Draw!" title="Draw!" />
+					<?php } ?>
+					&nbsp;
+				</td>
+			<?php } else { ?>
+				<td>&nbsp;</td>
+				<td>&nbsp;</td>
+			<?php } ?>
+		</tr>
+		<?php } ?>
+	</table>
+</div>
Index: system/application/views/office/liveblog/admin.php
===================================================================
--- system/application/views/office/liveblog/admin.php (revision 1b9b919ad8c49533c61400905c4aa561e682db5c)
+++ system/application/views/office/liveblog/admin.php (revision 1b9b919ad8c49533c61400905c4aa561e682db5c)
@@ -0,0 +1,53 @@
+<script type="text/javascript">
+function update_count(control) {
+	var display = document.getElementById('character_count');
+	display.innerHTML = 140 - control.value.length;
+}
+</script>
+
+<div class="BlueBox">
+	<h2>LIVE BLOGGING ADMIN -
+	<?php
+	if ($article_id == 1682) echo('TEST');
+	elseif ($article_id == 2965) echo('FRIDAY');
+	elseif ($article_id == 1691) echo('SATURDAY');
+	elseif ($article_id == 1692) echo('SUNDAY');
+	elseif ($article_id == 2858) echo('Elections 2009');
+	else echo('UNKNOWN');
+	?>
+	</h2>
+	<p>
+		<a href="/office/liveblog/admin/1682">Test Article</a> |
+		<a href="/office/liveblog/admin/2965">FRIDAY</a> |
+		<!--
+		<a href="/office/liveblog/admin/1691">SATURDAY</a> |
+		<a href="/office/liveblog/admin/1692">SUNDAY</a>
+		<a href="/office/liveblog/admin/2858">Elections 2009</a>
+		-->
+	</p>
+	<form action="/office/liveblog/admin/<?php echo($article_id); ?>" method="post">
+		<div style="float:right;clear:both;">
+			<input type="submit" name="postnew" value="Post" style="float:none;margin:0;" /><br />
+			<input type="checkbox" name="posttwitter" value="twitter" /><br />
+			<div id="character_count">140</div>
+		</div>
+		<div><textarea cols="40" rows="3" name="postcontent" id="postcontent" style="width:700px;" onclick="update_count(this);" onfocus="update_count(this);" onblur="update_count(this);" onkeyup="update_count(this);" onkeydown="update_count(this);"></textarea></div>
+	</form>
+</div>
+
+<div class="BlueBox">
+	<div style="float:right">
+		<a href="/news/<?php echo($article_id); ?>" target="_blank">VIEW ARTICLE</a>
+	</div>
+	<h2>Current Entries</h2>
+	<?php foreach ($content['rows'] as $entry) { ?>
+		<form action="/office/liveblog/admin/<?php echo($article_id); ?>/<?php echo($entry->article_liveblog_id); ?>" method="post">
+			<div style="clear:both"><i><?php echo(date('r', $entry->article_liveblog_posted_time)); ?></i> by <b><?php echo($entry->user_firstname . ' ' . $entry->user_surname); ?></b></div>
+			<div style="float:right;clear:both;">
+				<input type="submit" name="edit<?php echo($entry->article_liveblog_id); ?>" value="Edit" style="float:none;margin:0;" /><br />
+				<input type="submit" name="delete<?php echo($entry->article_liveblog_id); ?>" value="Delete" style="float:none;margin:0;" onclick="return confirm('Are you sure you want to delete this entry?');" />
+			</div>
+			<div><textarea cols="40" rows="3" name="entry<?php echo($entry->article_liveblog_id); ?>" id="entry<?php echo($entry->article_liveblog_id); ?>" style="width:700px;"><?php echo($entry->article_liveblog_wikitext); ?></textarea></div>
+		</form>
+	<?php } ?>
+</div>
Index: system/application/views/office/liveblog/charts-elections-positions.php
===================================================================
--- system/application/views/office/liveblog/charts-elections-positions.php (revision 1b9b919ad8c49533c61400905c4aa561e682db5c)
+++ system/application/views/office/liveblog/charts-elections-positions.php (revision 1b9b919ad8c49533c61400905c4aa561e682db5c)
@@ -0,0 +1,7 @@
+<div class="BlueBox">
+	<h2>Election Positions</h2>
+
+	<?php foreach ($positions as $pos) { ?>
+		<p><a href="/office/liveblog/charts2/<?php echo($pos->id); ?>"><?php echo($pos->role); ?></a> (<?php echo($pos->candidate_count); ?> candidates)</p>
+	<?php } ?>
+</div>
Index: system/application/views/office/liveblog/charts-elections-results.php
===================================================================
--- system/application/views/office/liveblog/charts-elections-results.php (revision 1b9b919ad8c49533c61400905c4aa561e682db5c)
+++ system/application/views/office/liveblog/charts-elections-results.php (revision 1b9b919ad8c49533c61400905c4aa561e682db5c)
@@ -0,0 +1,61 @@
+<?php
+$boxes = array('a','d','g','h','j','l','v','w','nc','votes');
+$candidate_count = -1;
+?>
+
+<form action="/office/liveblog/charts2/<?php echo($position->id); ?>" method="post">
+<div class="BlueBox">
+	<h2><?php echo($position->role); ?></h2>
+	<p><a href="/office/liveblog/charts">GO BACK</a></p>
+
+	<table>
+<?php for ($r = 1; $r <= count($candidates[0]['rounds']); $r++) { ?>
+		<tr>
+			<th>ROUND #<?php echo($r); ?></th>
+	<?php foreach ($boxes as $b) { ?>
+			<th style="text-align:center"><?php echo($b); ?></th>
+	<?php } ?>
+		</tr>
+	<?php foreach ($candidates as $c) { ?>
+		<tr>
+			<td><?php echo($c['name']); ?></td>
+		<?php foreach ($boxes as $b) { ?>
+			<td><input type="text" name="c-<?php echo($c['id'].'-'.$r.'-'.$b); ?>" size="1" value="<?php echo($c['rounds'][$r][$b]); ?>" /></td>
+		<?php } ?>
+		</tr>
+	<?php } ?>
+<?php } ?>
+		<tr>
+			<th>ROUND #<?php echo(count($candidates[0]['rounds']) + 1); ?></th>
+<?php foreach ($boxes as $b) { ?>
+			<th style="text-align:center"><?php echo($b); ?></th>
+<?php } ?>			
+		</tr>
+<?php foreach ($candidates as $c) { $candidate_count++; $round_count = -1; ?>
+		<tr>
+			<td><?php echo($c['name']); ?></td>
+	<?php foreach ($boxes as $b) { $round_count++; ?>
+			<td><input type="text" name="c-<?php echo($c['id'].'-'.(count($candidates[0]['rounds']) + 1).'-'.$b); ?>" size="1" tabindex="<?php echo($candidate_count + (count($candidates) * $round_count) + 5); ?>" /></td>
+	<?php } ?>
+		</tr>
+<?php } ?>
+	</table>
+	<div>
+		<input type="submit" name="set-data" value="Save" class="button" />
+	</div>
+	<div style="clear:both"></div>
+</div>
+
+<div class="BlueBox" id="chart1">
+	<div style="float:right">
+		<input type="text" name="chart1-height" value="<?php echo($_POST['chart1-height']); ?>" size="1" />
+		<input type="submit" name="update-chart" value="Update" />
+		<br />
+		<input type="submit" name="insert-chart1" value="Insert into Article" />
+	</div>
+	<?php foreach ($chart1  as $c) { ?>
+		<p><img src="<?php echo($c); ?>" /><br />
+		<input type="text" value="<?php echo($c); ?>" size="80" /><br /></p>
+	<?php } ?>
+</div>
+</form>
