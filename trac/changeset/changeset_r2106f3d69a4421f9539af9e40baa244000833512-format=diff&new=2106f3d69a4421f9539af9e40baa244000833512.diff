Index: design/crosswords/create_tables.sql
===================================================================
--- design/crosswords/create_tables.sql (revision cd98c170fb151153e6f3271267995b7d5a0e8f21)
+++ design/crosswords/create_tables.sql (revision 2106f3d69a4421f9539af9e40baa244000833512)
@@ -61,8 +61,8 @@
 CREATE TABLE `crossword_authors` (
 	`crossword_author_crossword_id` INT NOT NULL ,
-	`crossword_author_user_entity_id` INT NOT NULL ,
+	`crossword_author_business_card_id` INT NOT NULL ,
 	PRIMARY KEY (
 		`crossword_author_crossword_id` ,
-		`crossword_author_user_entity_id`
+		`crossword_author_business_card_id`
 	),
 	FOREIGN KEY (
Index: system/application/models/businesscards_model.php
===================================================================
--- system/application/models/businesscards_model.php (revision 8c2f3a16f20187151812ef106eb4415f3107976b)
+++ system/application/models/businesscards_model.php (revision 2106f3d69a4421f9539af9e40baa244000833512)
@@ -491,13 +491,22 @@
 				LEFT JOIN	users
 					ON		users.user_entity_id = business_cards.business_card_user_entity_id ';
+		$bind = array();
 		if ($user_id === NULL) {
 			$sql .= 'WHERE		business_cards.business_card_user_entity_id IS NULL ';
+		} elseif (is_array($user_id)) {
+			$in_list = array();
+			foreach ($user_id as $entity_id) {
+				$in_list[] = '?';
+				$bind[] = $entity_id;
+			}
+			$sql .= 'WHERE		business_cards.business_card_user_entity_id IN ('.join(',',$in_list).') ';
 		} else {
 			$sql .= 'WHERE		business_cards.business_card_user_entity_id = ? ';
+			$bind[] = $user_id;
 		}
 		$sql .= 'AND		business_cards.business_card_business_card_group_id = business_card_groups.business_card_group_id
 				AND			business_card_groups.business_card_group_organisation_entity_id IS NULL
 				AND			business_cards.business_card_deleted = 0';
-		$query = $this->db->query($sql, array($user_id));
+		$query = $this->db->query($sql, $bind);
 		return $query->result_array();
 	}
Index: system/application/models/crosswords_model.php
===================================================================
--- system/application/models/crosswords_model.php (revision c3e62f0be963ba7dc2b4ad2196a2a7daa8fcdd54)
+++ system/application/models/crosswords_model.php (revision 2106f3d69a4421f9539af9e40baa244000833512)
@@ -16,4 +16,5 @@
 		$this->load->helper('crosswords');
 		$this->load->model('comments_model');
+		$this->load->model('businesscards_model');
 
 		// Snippets of useful sql
@@ -724,14 +725,16 @@
 				'`crossword_category_name`			AS category_name,'.
 				'`crossword_category_short_name`	AS category_short_name, '.
-				'`user_entity_id`								AS author_id, '.
-				'CONCAT(`user_firstname`, " ", `user_surname`)	AS author_fullname '.
+				'`business_card_id`					AS author_id, '.
+				'`business_card_name`				AS author_fullname '.
 				'FROM `crosswords` '.
 				'INNER JOIN `crossword_categories` '.
 				'	ON	`crosswords`.`crossword_category_id`=`crossword_categories`.`crossword_category_id` '.
-				// Authors
+				// Author business cards
 				'LEFT JOIN `crossword_authors` '.
 				'	ON	`crossword_author_crossword_id`=`crossword_id` '.
-				'LEFT JOIN `users` '.
-				'	ON	`crossword_author_user_entity_id`=`user_entity_id` ';
+				'LEFT JOIN `business_cards` '.
+				'	ON	`crossword_author_business_card_id`=`business_card_id` '.
+				'	AND	`business_card_approved` = TRUE ';
+				'	AND	`business_card_deleted`  = FALSE ';
 
 		$bind = array();
@@ -761,5 +764,5 @@
 		}
 
-		$sql .= 'ORDER BY `crossword_publication` '.$order.', `user_surname` ASC, `user_firstname` ASC ';
+		$sql .= 'ORDER BY `crossword_publication` '.$order.', `business_card_name` ASC ';
 		if (null !== $limit) {
 			$sql .= 'LIMIT 0,'.(int)$limit;
@@ -791,5 +794,22 @@
 	function GetAllAuthors()
 	{
-		return $this->permissions_model->GetAllUsersWithPermission('CROSSWORD_AUTHOR');
+		// Get users ids with crossword authorship permission
+		$users = $this->permissions_model->GetAllUsersWithPermission('CROSSWORD_AUTHOR');
+		$user_ids = array();
+		foreach ($users as &$user) {
+			$user_ids[] = $user['id'];
+		}
+		// Get corresponding bylines and construct results
+		$bylines = $this->businesscards_model->GetUserBylines($user_ids);
+		$results = array();
+		foreach ($bylines as &$byline) {
+			if ($byline['business_card_approved']) {
+				$results[] = array(
+					'id' => $byline['business_card_id'],
+					'fullname' => $byline['business_card_name'],
+				);
+			}
+		}
+		return $results;
 	}
 
@@ -857,5 +877,5 @@
 					'WHERE	`crossword_author_crossword_id`=? ';
 			if (!empty($qs)) {
-				$sql .=	'	AND	`crossword_author_user_entity_id` NOT IN ('.join(',',$qs).')';
+				$sql .=	'	AND	`crossword_author_business_card_id` NOT IN ('.join(',',$qs).')';
 			}
 			$this->db->query($sql, $bind);
@@ -873,5 +893,5 @@
 				$sql =	'INSERT INTO `crossword_authors` ( '.
 						'	`crossword_author_crossword_id`, '.
-						'	`crossword_author_user_entity_id` '.
+						'	`crossword_author_business_card_id` '.
 						') VALUES '.join(',',$qs).' '.
 						'ON DUPLICATE KEY UPDATE `crossword_author_crossword_id`=`crossword_author_crossword_id`';
Index: system/application/views/crosswords/office/crossword_edit.php
===================================================================
--- system/application/views/crosswords/office/crossword_edit.php (revision 304631e64ddc1834d2c3eff103e9ca06923e6e24)
+++ system/application/views/crosswords/office/crossword_edit.php (revision 2106f3d69a4421f9539af9e40baa244000833512)
@@ -27,4 +27,10 @@
 		<fieldset>
 			<?php $Configuration->Load(); ?>
+		</fieldset>
+
+		</fieldset>
+			<center>
+				Authors are selected from the approved bylines of office users with the CROSSWORD_AUTHOR permission.
+			</center>
 		</fieldset>
 
