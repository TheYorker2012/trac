Index: public_html/javascript/input_date.js
===================================================================
--- public_html/javascript/input_date.js (revision dfe01bf3876f56624b12c2fea081ee5cfd33e00c)
+++ public_html/javascript/input_date.js (revision b93e754e8da3c692ea1834a566589879b305e5ef)
@@ -79,142 +79,182 @@
 	var days = ['Mon','Tue','Wed','Thu','Fri','Sat','Sun'];
 	var months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];
+	var terms = ['Autumn','Christmas','Spring','Easter','Summer','Holiday'];
+	var term_year_offsets = [0,0,1,1,1,1];
 
 	var select = document.getElementById(name+'__term_select');
-	var term = select.options[select.selectedIndex].value;
+	var original_opt = select.options[select.selectedIndex];
+	var term = original_opt.value;
 	if (term == 'earlier') {
-		alert('Selection of earlier terms not yet supported');
+		// find first term and add 6 more terms
+		var first_term_opt = select.options[1];
+		var year_term = first_term_opt.value.split('-');
+		var ac_year = parseInt(year_term[0],10);
+		var term = parseInt(year_term[1],10);
+		for (var i = 0; i < 6; ++i) {
+			--term;
+			if (term < 0) {
+				term = 5;
+				--ac_year;
+			}
+			// add the option to the list
+			var opt = document.createElement('option');
+			opt.value = ac_year+'-'+term;
+			setInnerText(opt, terms[term] + ' ' + (ac_year+term_year_offsets[term]));
+			select.insertBefore(opt, first_term_opt);
+			first_term_opt = opt;
+		}
+		// go straight to the first one added
+		select.selectedIndex = 6;
 	}
 	else if (term == 'later') {
-		alert('Selection of later terms not yet supported');
+		// find last term and add 6 more terms
+		var last_term_opt = select.options[select.options.length-2];
+		var year_term = last_term_opt.value.split('-');
+		var ac_year = parseInt(year_term[0],10);
+		var term = parseInt(year_term[1],10);
+		for (var i = 0; i < 6; ++i) {
+			++term;
+			if (term >= 6) {
+				term = 0;
+				++ac_year;
+			}
+			// add the option to the list
+			var opt = document.createElement('option');
+			opt.value = ac_year+'-'+term;
+			setInnerText(opt, terms[term] + ' ' + (ac_year+term_year_offsets[term]));
+			select.insertBefore(opt, original_opt);
+		}
+		// go straight to the first one added
+		select.selectedIndex = select.options.length-7;
+	}
+	term = select.options[select.selectedIndex].value;
+
+	select.disabled = "disabled";
+	// first clear the table
+	var wk = 1;
+	var tbody = null;
+	while (true) {
+		var tr = document.getElementById(name+'__wk_'+wk);
+		if (tr == null) {
+			break;
+		}
+		tbody = tr.parentNode;
+		tbody.removeChild(tr);
+		++wk;
+	}
+	// put a dummy row to say we're waiting
+	var dummy = document.createElement('tr');
+	dummy.id=name+'__wk_1';
+	var dummy_td = document.createElement('th');
+	dummy_td.colSpan = 8;
+	var dummy_div = document.createElement('div');
+	dummy_div.className="loading";
+	setInnerText(dummy_div, "Loading term data");
+	dummy_td.appendChild(dummy_div);
+	dummy.appendChild(dummy_td);
+	tbody.appendChild(dummy);
+
+	// prefetch term data
+	var year_term = term.split('-');
+	if (year_term.length == 2) {
+		var ac_year = parseInt(year_term[0],10);
+		var ac_term = parseInt(year_term[1],10);
+		if (isNaN(ac_year) || ac_year != year_term[0]) {
+			setInnerText(dummy_td, "Bad year in term id");
+			select.disabled = "";
+		}
+		else if (isNaN(ac_term) || ac_term != year_term[1]) {
+			setInnerText(dummy_td, "Bad term in term id");
+			select.disabled = "";
+		}
+		else {
+			calendar_term_dates_prefetch(ac_year, ac_year, function(success) {
+				var term_info = calendar_term(ac_year, ac_term);
+				if (null != term_info) {
+					// Clear dummy
+					tbody.removeChild(dummy);
+					// Start adding weeks
+					var today = new Date();
+					var today_year = today.getYear();
+					var today_month = today.getMonth();
+					var today_date = today.getDate();
+					var cur_date = term_info.mondayWeek1();
+					var num_weeks = term_info.weeks();
+					var last_month = null;
+					var onclick_setter = function(td, wk, day)
+					{
+						td.onclick = function()
+						{
+							return input_date_change(name, wk, day);
+						}
+					}
+					for (var wk = 1; wk <= num_weeks; ++wk) {
+						var tr = document.createElement('tr');
+						tr.id = name+'__wk_'+wk;
+						tbody.appendChild(tr);
+						var th = document.createElement('th');
+						setInnerText(th, wk);
+						tr.appendChild(th);
+						for (var day = 0; day < 7; ++day) {
+							var td = document.createElement('td');
+							td.id = name+'__'+wk+'_'+days[day];
+							var year = cur_date.getYear();
+							var month = cur_date.getMonth();
+							var text = cur_date.getDate();
+							if (month != last_month) {
+								text = months[month]+'&nbsp;'+text;
+								last_month = month;
+							}
+							td.innerHTML = text;
+
+							var classes = new Array;
+							if (day >= 5) {
+								classes.push('we');
+							}
+							if (month % 2 == 1) {
+								classes.push('ev');
+							}
+							if (year  == today_year  &&
+								month == today_month &&
+								text  == today_date) {
+								classes.push('tod');
+							}
+							else if (cur_date.valueOf() < today.valueOf()) {
+								classes.push('pa');
+							}
+							td.className = classes.join(' ');
+							onclick_setter(td,wk,day);
+							tr.appendChild(td);
+
+							// Next day
+							cur_date.setDate(cur_date.getDate()+1);
+						}
+					}
+					var week_select = document.getElementById(name+'__wk_select');
+					var cur_week = week_select.selectedIndex;
+					while (null != week_select.firstChild) {
+						week_select.removeChild(week_select.firstChild);
+					}
+					for (var wk = 1; wk <= num_weeks; ++wk) {
+						var opt = document.createElement('option');
+						opt.value = wk;
+						setInnerText(opt, wk);
+						week_select.appendChild(opt);
+					}
+					if (cur_week >= num_weeks) {
+						cur_week = num_weeks-1;
+						week_select.selectedIndex = cur_week;
+					}
+				}
+				else {
+					setInnerText(dummy_td, "Term data could not be retrieved");
+				}
+				select.disabled = "";
+				input_date_day_changed(name);
+			});
+		}
 	}
 	else {
-		select.disabled = "disabled";
-		// first clear the table
-		var wk = 1;
-		var tbody = null;
-		while (true) {
-			var tr = document.getElementById(name+'__wk_'+wk);
-			if (tr == null) {
-				break;
-			}
-			tbody = tr.parentNode;
-			tbody.removeChild(tr);
-			++wk;
-		}
-		// put a dummy row to say we're waiting
-		var dummy = document.createElement('tr');
-		dummy.id=name+'__wk_1';
-		var dummy_td = document.createElement('th');
-		dummy_td.colSpan = 8;
-		var dummy_div = document.createElement('div');
-		dummy_div.className="loading";
-		setInnerText(dummy_div, "Loading term data");
-		dummy_td.appendChild(dummy_div);
-		dummy.appendChild(dummy_td);
-		tbody.appendChild(dummy);
-
-		// prefetch term data
-		var year_term = term.split('-');
-		if (year_term.length == 2) {
-			var ac_year = parseInt(year_term[0],10);
-			var ac_term = parseInt(year_term[1],10);
-			if (isNaN(ac_year) || ac_year != year_term[0]) {
-				setInnerText(dummy_td, "Bad year in term id");
-				select.disabled = "";
-			}
-			else if (isNaN(ac_term) || ac_term != year_term[1]) {
-				setInnerText(dummy_td, "Bad term in term id");
-				select.disabled = "";
-			}
-			else {
-				calendar_term_dates_prefetch(ac_year, ac_year, function(success) {
-					var term_info = calendar_term(ac_year, ac_term);
-					if (null != term_info) {
-						// Clear dummy
-						tbody.removeChild(dummy);
-						// Start adding weeks
-						var today = new Date();
-						var today_year = today.getYear();
-						var today_month = today.getMonth();
-						var today_date = today.getDate();
-						var cur_date = term_info.mondayWeek1();
-						var num_weeks = term_info.weeks();
-						var last_month = null;
-						var onclick_setter = function(td, wk, day)
-						{
-							td.onclick = function()
-							{
-								return input_date_change(name, wk, day);
-							}
-						}
-						for (var wk = 1; wk <= num_weeks; ++wk) {
-							var tr = document.createElement('tr');
-							tr.id = name+'__wk_'+wk;
-							tbody.appendChild(tr);
-							var th = document.createElement('th');
-							setInnerText(th, wk);
-							tr.appendChild(th);
-							for (var day = 0; day < 7; ++day) {
-								var td = document.createElement('td');
-								td.id = name+'__'+wk+'_'+days[day];
-								var year = cur_date.getYear();
-								var month = cur_date.getMonth();
-								var text = cur_date.getDate();
-								if (month != last_month) {
-									text = months[month]+'&nbsp;'+text;
-									last_month = month;
-								}
-								td.innerHTML = text;
-
-								var classes = new Array;
-								if (day >= 5) {
-									classes.push('we');
-								}
-								if (month % 2 == 1) {
-									classes.push('ev');
-								}
-								if (year  == today_year  &&
-									month == today_month &&
-									text  == today_date) {
-									classes.push('tod');
-								}
-								else if (cur_date.valueOf() < today.valueOf()) {
-									classes.push('pa');
-								}
-								td.className = classes.join(' ');
-								onclick_setter(td,wk,day);
-								tr.appendChild(td);
-
-								// Next day
-								cur_date.setDate(cur_date.getDate()+1);
-							}
-						}
-						var week_select = document.getElementById(name+'__wk_select');
-						var cur_week = week_select.selectedIndex;
-						while (null != week_select.firstChild) {
-							week_select.removeChild(week_select.firstChild);
-						}
-						for (var wk = 1; wk <= num_weeks; ++wk) {
-							var opt = document.createElement('option');
-							opt.value = wk;
-							setInnerText(opt, wk);
-							week_select.appendChild(opt);
-						}
-						if (cur_week >= num_weeks) {
-							cur_week = num_weeks-1;
-							week_select.selectedIndex = cur_week;
-						}
-					}
-					else {
-						setInnerText(dummy_td, "Term data could not be retrieved");
-					}
-					select.disabled = "";
-					input_date_day_changed(name);
-				});
-			}
-		}
-		else {
-			setInnerText(dummy_td, "Bad term id");
-		}
+		setInnerText(dummy_td, "Bad term id");
 	}
 }
Index: system/application/helpers/input_date_helper.php
===================================================================
--- system/application/helpers/input_date_helper.php (revision dfe01bf3876f56624b12c2fea081ee5cfd33e00c)
+++ system/application/helpers/input_date_helper.php (revision b93e754e8da3c692ea1834a566589879b305e5ef)
@@ -125,4 +125,5 @@
 					$year = $cur->AcademicYear();
 					$term = $cur->AcademicTerm();
+					?><option value="earlier">(more)</option><?php
 					for ($i = 0; $i < 6; ++$i) {
 						$cur = new Academic_time(Academic_time::StartOfAcademicTerm($year, $term));
@@ -142,4 +143,5 @@
 						}
 					}
+					?><option value="later">(more)</option><?php
 				?></select><?php
 				// Time of day
