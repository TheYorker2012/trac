Index: public_html/stylesheets/input.css
===================================================================
--- public_html/stylesheets/input.css (revision 4e9b17df88e5f8086bcfd07df4ef6467c8aab080)
+++ public_html/stylesheets/input.css (revision 8fc5f7cc057f64bd69f25cf26eaea37c3a94ddf5)
@@ -14,4 +14,5 @@
 
 div.input_error.mover input,
+div.input_error.mover textarea,
 div.input_error.mover select {
 	border: 3px solid red;
Index: system/application/controllers/office/crosswords.php
===================================================================
--- system/application/controllers/office/crosswords.php (revision 1e109d2d7dc40ed51cf5d7855b7af143b0b53093)
+++ system/application/controllers/office/crosswords.php (revision 8fc5f7cc057f64bd69f25cf26eaea37c3a94ddf5)
@@ -58,8 +58,10 @@
 
 				$name_interface = new InputTextInterface('name', '');
+				$name_interface->SetMaxLength(255);
 				$name_interface->AddValidator(new InputTextValidatorMinLength(3));
 				$form->Add('Name', $name_interface);
 
 				$description_interface = new InputTextInterface('description', '');
+				$description_interface->SetMultiline(true);
 				$form->Add('Description', $description_interface);
 
@@ -67,5 +69,12 @@
 				if (0 == $num_errors && $form->Updated()) {
 					$values = $form->ChangedValues();
-					var_dump($values);
+					$id = $this->crosswords_model->AddTipCategory($values);
+					if ($id === null) {
+						$this->messages->AddMessage('error', 'Tip category could not be added');
+					}
+					else {
+						$this->messages->AddMessage('success', 'Tip category added');
+						redirect('office/crosswords/tips/'.$id);
+					}
 				}
 
Index: system/application/helpers/input_helper.php
===================================================================
--- system/application/helpers/input_helper.php (revision 1e109d2d7dc40ed51cf5d7855b7af143b0b53093)
+++ system/application/helpers/input_helper.php (revision 8fc5f7cc057f64bd69f25cf26eaea37c3a94ddf5)
@@ -68,6 +68,6 @@
 				$errors = $interface[1]->Errors();
 				if (count($errors) > 0) {
-					get_instance()->main_frame->includeJs('javascript/css_classes.js');
-					get_instance()->main_frame->includeJs('javascript/input.js');
+					$ci->main_frame->includeJs('javascript/css_classes.js');
+					$ci->main_frame->includeJs('javascript/input.js');
 					$enter_js = 'input_error_mouse('.js_literalise($name).', true);';
 					$exit_js = 'input_error_mouse('.js_literalise($name).', false);';
@@ -84,6 +84,6 @@
 				$warnings = $interface[1]->Warnings();
 				if (count($warnings) > 0) {
-					get_instance()->main_frame->includeJs('javascript/css_classes.js');
-					get_instance()->main_frame->includeJs('javascript/input.js');
+					$ci->main_frame->includeJs('javascript/css_classes.js');
+					$ci->main_frame->includeJs('javascript/input.js');
 					$enter_js = 'input_error_mouse('.js_literalise($name).', true);';
 					$exit_js = 'input_error_mouse('.js_literalise($name).', false);';
@@ -226,15 +226,15 @@
 	{
 		$count = 0;
-		if (null === $this->enabled || $this->enabled) {
-			if ($this->_Validate($this->value, $this->errors, $this->warnings)) {
-				foreach ($this->validators as &$validator) {
-					if (!$validator->Validate($this->value, $this->errors, $this->warnings)) {
-						break;
+		if (null !== $this->changed) {
+			if (null === $this->enabled || $this->enabled) {
+				if ($this->_Validate($this->value, $this->errors, $this->warnings)) {
+					foreach ($this->validators as &$validator) {
+						if (!$validator->Validate($this->value, $this->errors, $this->warnings)) {
+							break;
+						}
 					}
 				}
-			}
-			$count = count($this->errors);
-		}
-		if (null !== $this->changed) {
+				$count = count($this->errors);
+			}
 			if (!$this->_Equal($this->Value(), $this->default)) {
 				$this->changed = true;
@@ -317,4 +317,5 @@
 	protected $max_length = null;
 	protected $events = array();
+	protected $multiline = false;
 
 	public function __construct($name, $default = null, $enabled = null, $auto = true)
@@ -333,17 +334,37 @@
 	}
 
+	public function SetMultiline($multiline)
+	{
+		$this->multiline = $multiline;
+	}
+
 	protected function _Load()
 	{
-		?><input	type="text"<?php
-				?>	name="<?php echo("$this->name[val]"); ?>"<?php
-				?>	id="<?php echo($this->name.'__val'); ?>"<?php
-				?>	value="<?php echo(xml_escape($this->value)); ?>"<?php
-			if ($this->max_length !== null) {
-				?>	maxlength="<?php echo($this->max_length); ?>"<?php
-			}
-			foreach ($this->events as $event => $javascript) {
-				?>	<?php echo($event); ?>="<?php echo(xml_escape($javascript)); ?>"<?php
-			}
-				?>	/><?php
+		if (!$this->multiline) {
+			?><input	type="text"<?php
+					?>	name="<?php echo("$this->name[val]"); ?>"<?php
+					?>	id="<?php echo($this->name.'__val'); ?>"<?php
+					?>	value="<?php echo(xml_escape($this->value)); ?>"<?php
+				if ($this->max_length !== null) {
+					?>	maxlength="<?php echo($this->max_length); ?>"<?php
+				}
+				foreach ($this->events as $event => $javascript) {
+					?>	<?php echo($event); ?>="<?php echo(xml_escape($javascript)); ?>"<?php
+				}
+					?>	/><?php
+		}
+		else {
+			?><textarea	name="<?php echo("$this->name[val]"); ?>"<?php
+					?>	id="<?php echo($this->name.'__val'); ?>"<?php
+				if ($this->max_length !== null) {
+					?>	maxlength="<?php echo($this->max_length); ?>"<?php
+				}
+				foreach ($this->events as $event => $javascript) {
+					?>	<?php echo($event); ?>="<?php echo(xml_escape($javascript)); ?>"<?php
+				}
+					?>><?php
+			echo(xml_escape($this->value));
+			?></textarea><?php
+		}
 	}
 
Index: system/application/models/crosswords_model.php
===================================================================
--- system/application/models/crosswords_model.php (revision 1e109d2d7dc40ed51cf5d7855b7af143b0b53093)
+++ system/application/models/crosswords_model.php (revision 8fc5f7cc057f64bd69f25cf26eaea37c3a94ddf5)
@@ -34,4 +34,28 @@
 	 * Tips
 	 */
+
+	/** Add a tip category
+	 * @param $values array('name'=>,'description'=>)
+	 */
+	function AddTipCategory($values)
+	{
+		if (!isset($values['name'])) {
+			return null;
+		}
+		$sql =	'INSERT INTO `crossword_tip_categories` '.
+				'SET `crossword_tip_category_name`=?';
+		$bind = array($values['name']);
+		if (isset($values['description'])) {
+			$sql .=	',`crossword_tip_category_description`=?';
+			$bind[] = $values['description'];
+		}
+		$this->db->query($sql, $bind);
+		if ($this->db->affected_rows() < 1) {
+			return null;
+		}
+		else {
+			return $this->db->insert_id();
+		}
+	}
 
 	/** Get tip categories.
